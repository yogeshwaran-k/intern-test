{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Yogeshwaran Kumaran\\\\OneDrive\\\\Desktop\\\\test\\\\online-test\\\\src\\\\components\\\\TestPage.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport Chart from 'chart.js/auto';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TestPage({\n  student,\n  questions,\n  setStage,\n  setResults\n}) {\n  _s();\n  const [timeLeft, setTimeLeft] = useState(30 * 60);\n  const [answers, setAnswers] = useState({});\n  const [cheatingLog, setCheatingLog] = useState([]);\n  const [isFullscreen, setIsFullscreen] = useState(false);\n  useEffect(() => {\n    // Check full-screen support\n    if (!document.fullscreenEnabled) {\n      alert('Full-screen mode is required but not supported by your browser.');\n      return;\n    }\n\n    // Request full-screen\n    const requestFullscreen = async () => {\n      try {\n        await document.documentElement.requestFullscreen();\n        setIsFullscreen(true);\n      } catch (err) {\n        alert('Failed to enter full-screen mode. Please enable full-screen for the test.');\n        console.error('Full-screen error:', err);\n      }\n    };\n    requestFullscreen();\n\n    // Timer\n    const timer = setInterval(() => {\n      setTimeLeft(prev => {\n        if (prev <= 0) {\n          clearInterval(timer);\n          handleSubmit();\n          return 0;\n        }\n        return prev - 1;\n      });\n    }, 1000);\n\n    // Cheating prevention\n    const logCheating = action => {\n      setCheatingLog(log => [...log, {\n        action,\n        timestamp: new Date().toISOString()\n      }]);\n    };\n    const handleVisibilityChange = () => {\n      if (document.hidden) {\n        logCheating('tab_switch_attempt');\n        alert('Tab switching is not allowed!');\n      }\n    };\n    const handleFullscreenChange = () => {\n      if (!document.fullscreenElement && isFullscreen) {\n        logCheating('exit_fullscreen_attempt');\n        alert('Please stay in full-screen mode!');\n        document.documentElement.requestFullscreen().catch(err => {\n          console.error('Re-enter full-screen failed:', err);\n        });\n      }\n    };\n    const handleContextMenu = e => {\n      e.preventDefault();\n      logCheating('right_click_attempt');\n    };\n    const handleCopyPaste = e => {\n      e.preventDefault();\n      logCheating(`${e.type}_attempt`);\n    };\n    document.addEventListener('visibilitychange', handleVisibilityChange);\n    document.addEventListener('fullscreenchange', handleFullscreenChange);\n    document.addEventListener('contextmenu', handleContextMenu);\n    document.addEventListener('copy', handleCopyPaste);\n    document.addEventListener('paste', handleCopyPaste);\n    return () => {\n      clearInterval(timer);\n      // Only exit full-screen if active\n      if (document.fullscreenElement) {\n        document.exitFullscreen().catch(err => {\n          console.error('Exit full-screen failed:', err);\n        });\n      }\n      document.removeEventListener('visibilitychange', handleVisibilityChange);\n      document.removeEventListener('fullscreenchange', handleFullscreenChange);\n      document.removeEventListener('contextmenu', handleContextMenu);\n      document.removeEventListener('copy', handleCopyPaste);\n      document.removeEventListener('paste', handleCopyPaste);\n    };\n  }, []);\n  const handleAnswer = (questionId, selected) => {\n    setAnswers({\n      ...answers,\n      [questionId]: selected\n    });\n  };\n  const handleSubmit = async () => {\n    const formattedAnswers = Object.keys(answers).map(qId => ({\n      questionId: parseInt(qId),\n      selected: answers[qId]\n    }));\n    try {\n      const res = await fetch('http://localhost:5000/api/submit', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          id: student.id,\n          answers: formattedAnswers,\n          cheatingLog\n        })\n      });\n      if (!res.ok) throw new Error('Submission failed');\n      setResults(await res.json());\n      setStage('results');\n    } catch (err) {\n      alert('Error submitting test. Please try again.');\n      console.error('Submission error:', err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [student.domain, \" Test\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Time Left: \", Math.floor(timeLeft / 60), \":\", (timeLeft % 60).toString().padStart(2, '0')]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), questions.map((q, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [idx + 1, \". \", q.question]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }, this), q.options.map((opt, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: `q${q.id}`,\n          value: i,\n          onChange: () => handleAnswer(q.id, i)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 15\n        }, this), opt]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 13\n      }, this))]\n    }, q.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: handleSubmit,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 5\n  }, this);\n}\n_s(TestPage, \"815pBe25htpQc0/vThK+5LRqdv0=\");\n_c = TestPage;\nexport default TestPage;\nvar _c;\n$RefreshReg$(_c, \"TestPage\");","map":{"version":3,"names":["useState","useEffect","Chart","jsxDEV","_jsxDEV","TestPage","student","questions","setStage","setResults","_s","timeLeft","setTimeLeft","answers","setAnswers","cheatingLog","setCheatingLog","isFullscreen","setIsFullscreen","document","fullscreenEnabled","alert","requestFullscreen","documentElement","err","console","error","timer","setInterval","prev","clearInterval","handleSubmit","logCheating","action","log","timestamp","Date","toISOString","handleVisibilityChange","hidden","handleFullscreenChange","fullscreenElement","catch","handleContextMenu","e","preventDefault","handleCopyPaste","type","addEventListener","exitFullscreen","removeEventListener","handleAnswer","questionId","selected","formattedAnswers","Object","keys","map","qId","parseInt","res","fetch","method","headers","body","JSON","stringify","id","ok","Error","json","className","children","domain","fileName","_jsxFileName","lineNumber","columnNumber","Math","floor","toString","padStart","q","idx","question","options","opt","i","name","value","onChange","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Yogeshwaran Kumaran/OneDrive/Desktop/test/online-test/src/components/TestPage.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport Chart from 'chart.js/auto';\r\n\r\nfunction TestPage({ student, questions, setStage, setResults }) {\r\n  const [timeLeft, setTimeLeft] = useState(30 * 60);\r\n  const [answers, setAnswers] = useState({});\r\n  const [cheatingLog, setCheatingLog] = useState([]);\r\n  const [isFullscreen, setIsFullscreen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Check full-screen support\r\n    if (!document.fullscreenEnabled) {\r\n      alert('Full-screen mode is required but not supported by your browser.');\r\n      return;\r\n    }\r\n\r\n    // Request full-screen\r\n    const requestFullscreen = async () => {\r\n      try {\r\n        await document.documentElement.requestFullscreen();\r\n        setIsFullscreen(true);\r\n      } catch (err) {\r\n        alert('Failed to enter full-screen mode. Please enable full-screen for the test.');\r\n        console.error('Full-screen error:', err);\r\n      }\r\n    };\r\n    requestFullscreen();\r\n\r\n    // Timer\r\n    const timer = setInterval(() => {\r\n      setTimeLeft((prev) => {\r\n        if (prev <= 0) {\r\n          clearInterval(timer);\r\n          handleSubmit();\r\n          return 0;\r\n        }\r\n        return prev - 1;\r\n      });\r\n    }, 1000);\r\n\r\n    // Cheating prevention\r\n    const logCheating = (action) => {\r\n      setCheatingLog((log) => [\r\n        ...log,\r\n        { action, timestamp: new Date().toISOString() }\r\n      ]);\r\n    };\r\n\r\n    const handleVisibilityChange = () => {\r\n      if (document.hidden) {\r\n        logCheating('tab_switch_attempt');\r\n        alert('Tab switching is not allowed!');\r\n      }\r\n    };\r\n\r\n    const handleFullscreenChange = () => {\r\n      if (!document.fullscreenElement && isFullscreen) {\r\n        logCheating('exit_fullscreen_attempt');\r\n        alert('Please stay in full-screen mode!');\r\n        document.documentElement.requestFullscreen().catch((err) => {\r\n          console.error('Re-enter full-screen failed:', err);\r\n        });\r\n      }\r\n    };\r\n\r\n    const handleContextMenu = (e) => {\r\n      e.preventDefault();\r\n      logCheating('right_click_attempt');\r\n    };\r\n\r\n    const handleCopyPaste = (e) => {\r\n      e.preventDefault();\r\n      logCheating(`${e.type}_attempt`);\r\n    };\r\n\r\n    document.addEventListener('visibilitychange', handleVisibilityChange);\r\n    document.addEventListener('fullscreenchange', handleFullscreenChange);\r\n    document.addEventListener('contextmenu', handleContextMenu);\r\n    document.addEventListener('copy', handleCopyPaste);\r\n    document.addEventListener('paste', handleCopyPaste);\r\n\r\n    return () => {\r\n      clearInterval(timer);\r\n      // Only exit full-screen if active\r\n      if (document.fullscreenElement) {\r\n        document.exitFullscreen().catch((err) => {\r\n          console.error('Exit full-screen failed:', err);\r\n        });\r\n      }\r\n      document.removeEventListener('visibilitychange', handleVisibilityChange);\r\n      document.removeEventListener('fullscreenchange', handleFullscreenChange);\r\n      document.removeEventListener('contextmenu', handleContextMenu);\r\n      document.removeEventListener('copy', handleCopyPaste);\r\n      document.removeEventListener('paste', handleCopyPaste);\r\n    };\r\n  }, []);\r\n\r\n  const handleAnswer = (questionId, selected) => {\r\n    setAnswers({ ...answers, [questionId]: selected });\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    const formattedAnswers = Object.keys(answers).map((qId) => ({\r\n      questionId: parseInt(qId),\r\n      selected: answers[qId]\r\n    }));\r\n\r\n    try {\r\n      const res = await fetch('http://localhost:5000/api/submit', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({\r\n          id: student.id,\r\n          answers: formattedAnswers,\r\n          cheatingLog\r\n        })\r\n      });\r\n\r\n      if (!res.ok) throw new Error('Submission failed');\r\n      setResults(await res.json());\r\n      setStage('results');\r\n    } catch (err) {\r\n      alert('Error submitting test. Please try again.');\r\n      console.error('Submission error:', err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"mt-5\">\r\n      <h2>{student.domain} Test</h2>\r\n      <p>Time Left: {Math.floor(timeLeft / 60)}:{(timeLeft % 60).toString().padStart(2, '0')}</p>\r\n      {questions.map((q, idx) => (\r\n        <div key={q.id} className=\"mb-4\">\r\n          <p>\r\n            {idx + 1}. {q.question}\r\n          </p>\r\n          {q.options.map((opt, i) => (\r\n            <div key={i}>\r\n              <input\r\n                type=\"radio\"\r\n                name={`q${q.id}`}\r\n                value={i}\r\n                onChange={() => handleAnswer(q.id, i)}\r\n              />\r\n              {opt}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      ))}\r\n      <button className=\"btn btn-primary\" onClick={handleSubmit}>\r\n        Submit\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TestPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}