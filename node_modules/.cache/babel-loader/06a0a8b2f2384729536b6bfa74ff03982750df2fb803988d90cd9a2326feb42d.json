{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Yogeshwaran Kumaran\\\\OneDrive\\\\Desktop\\\\test\\\\online-test\\\\src\\\\components\\\\IdEntry.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction IdEntry({\n  setStage,\n  setStudent,\n  setQuestions,\n  showModal,\n  closeModal\n}) {\n  _s();\n  const [id, setId] = useState('');\n  const handleSubmit = async () => {\n    const res = await fetch('http://localhost:5000/api/validate-id', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        id\n      })\n    });\n    const data = await res.json();\n    if (!data.success) {\n      showModal('Error', data.message);\n      return;\n    }\n    showModal('Confirm Identity', `Is this you? ${data.name}, ${data.domain}`, true, async () => {\n      try {\n        setStudent({\n          id,\n          name: data.name,\n          domain: data.domain\n        });\n        const qRes = await fetch('http://localhost:5000/api/questions', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            domain: data.domain\n          })\n        });\n        if (!qRes.ok) throw new Error('Failed to fetch questions');\n        setQuestions(await qRes.json());\n        setStage('test');\n        closeModal(); // Close modal after confirmation\n      } catch (err) {\n        showModal('Error', 'Failed to load test. Please try again.');\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-center mb-4\",\n      children: \"Enter Your ID\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"input-group-text\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"bi bi-person\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 44\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        value: id,\n        onChange: e => setId(e.target.value),\n        placeholder: \"Enter ID\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: handleSubmit,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(IdEntry, \"HQhLVNjveXBilLE1Zdd8jTOIPME=\");\n_c = IdEntry;\nexport default IdEntry;\nvar _c;\n$RefreshReg$(_c, \"IdEntry\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","IdEntry","setStage","setStudent","setQuestions","showModal","closeModal","_s","id","setId","handleSubmit","res","fetch","method","headers","body","JSON","stringify","data","json","success","message","name","domain","qRes","ok","Error","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Yogeshwaran Kumaran/OneDrive/Desktop/test/online-test/src/components/IdEntry.js"],"sourcesContent":["import { useState } from 'react';\r\n\r\nfunction IdEntry({ setStage, setStudent, setQuestions, showModal, closeModal }) {\r\n  const [id, setId] = useState('');\r\n\r\n  const handleSubmit = async () => {\r\n    const res = await fetch('http://localhost:5000/api/validate-id', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ id })\r\n    });\r\n    const data = await res.json();\r\n    if (!data.success) {\r\n      showModal('Error', data.message);\r\n      return;\r\n    }\r\n    showModal(\r\n      'Confirm Identity',\r\n      `Is this you? ${data.name}, ${data.domain}`,\r\n      true,\r\n      async () => {\r\n        try {\r\n          setStudent({ id, name: data.name, domain: data.domain });\r\n          const qRes = await fetch('http://localhost:5000/api/questions', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ domain: data.domain })\r\n          });\r\n          if (!qRes.ok) throw new Error('Failed to fetch questions');\r\n          setQuestions(await qRes.json());\r\n          setStage('test');\r\n          closeModal(); // Close modal after confirmation\r\n        } catch (err) {\r\n          showModal('Error', 'Failed to load test. Please try again.');\r\n        }\r\n      }\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"card mt-5\">\r\n      <h2 className=\"text-center mb-4\">Enter Your ID</h2>\r\n      <div className=\"input-group mb-3\">\r\n        <span className=\"input-group-text\"><i className=\"bi bi-person\"></i></span>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          value={id}\r\n          onChange={(e) => setId(e.target.value)}\r\n          placeholder=\"Enter ID\"\r\n        />\r\n      </div>\r\n      <button className=\"btn btn-primary\" onClick={handleSubmit}>\r\n        Submit\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default IdEntry;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}